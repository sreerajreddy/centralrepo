pipeline{
   agent any
    tools{
maven 'maven3.9.2'
         }
 stages{
    //checkout code
    stage('checkoutCode'){
	steps{
    git branch: 'development', credentialsId: 'f2a35195-47b2-46f4-8f02-5482d6a87910', url: 'https://github.com/sreerajreddy/maven-web-application.git'
    }
    }
	stage('Build'){
	steps{
	sh "mvn clean package"
	
	}
	}
	stage('ExecutesonarQube Report'){
	steps{
	sh "mvn clean sonar:sonar"
	}
	}
	stage('UploadArtifactsIntoNexus'){
	steps{
	sh "mvn clean deploy"
	}
	}
	//deploying to tomcat
	stage('DeployApplicationIntoTomcatServer'){
	steps{
   sshagent(['1c736315-0632-4636-884b-eb34783f1dc4']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.46.137:/opt/apache-tomcat-9.0.80/webapps/"
}
}
}
 }//stages closing
 
 
 

post {
  success {
    notifyBuild(currentBuild.result) 
  }
  failure {
  notifyBuild(currentBuild.result)
  }
}

}//pipeline closing

def notifyBuild(String buildStatus = 'STARTED') {
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#walmart")
}
 
